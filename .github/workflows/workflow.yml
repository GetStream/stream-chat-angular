name: Tests and release
on:
  push:
    branches:
      - master
      - support-ngx-translate-17
  pull_request:
    branches:
      - master
jobs:
  workflow:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          npm ci
      - name: Build
        run: |
          npm run build:prod
      - name: Linting
        run: |
          npm run lint
      - name: Unit tests
        run: |
          npm run test:ci
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - name: Deploy sample app to Vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}
          STREAM_API_KEY: ${{ vars.STREAM_DEMO_API_KEY }}
          STREAM_TOKEN_URL: ${{ vars.STREAM_DEMO_TOKEN_URL }}
          STREAM_USER_ID: <dynamic user>
          STREAM_CHANNELS_FILTER: '{"type": "messaging", "id": "talking-about-angular"}'
        run: >
          yarn vercel pull --yes --environment=${{ github.ref == 'refs/heads/master' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }} &&
          yarn vercel build ${{ github.ref == 'refs/heads/master' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }} &&
          yarn vercel deploy ${{ github.ref == 'refs/heads/master' && '--prod' || '' }} --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
