{
  "extends": "../../.eslintrc.json",
  "ignorePatterns": ["!**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": [
          "projects/stream-chat-angular/tsconfig.lib.json",
          "projects/stream-chat-angular/tsconfig.spec.json"
        ],
        "createDefaultProgram": true
      },
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "stream",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "stream",
            "style": "kebab-case"
          }
        ],
        "no-restricted-imports": [
          "error",
          {
            "paths": ["stream-chat-angular"],
            "patterns": ["dist/*", "public-api"]
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "args": "all",
            "argsIgnorePattern": "^_",
            "caughtErrors": "all",
            "caughtErrorsIgnorePattern": "^error",
            "destructuredArrayIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "ignoreRestSiblings": true
          }
        ]
      }
    },
    {
      "files": ["*.spec.ts"],
      "rules": {
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off"
      }
    },
    {
      "files": ["*.service.ts"],
      "parserOptions": {
        "project": [
          "projects/stream-chat-angular/tsconfig.lib.json",
          "projects/stream-chat-angular/tsconfig.spec.json"
        ],
        "createDefaultProgram": true
      },
      "extends": ["plugin:jsdoc/recommended"],
      "settings": {
        "jsdoc": {
          "mode": "typescript"
        }
      },
      "rules": {
        "jsdoc/require-param-type": 0,
        "jsdoc/require-returns-type": 0,
        "jsdoc/require-returns": 0,
        "jsdoc/newline-after-description": 0,
        "jsdoc/require-param-description": 0,
        "jsdoc/require-param": 2,
        "jsdoc/no-types": 2,
        "jsdoc/no-defaults": 2,
        "jsdoc/require-asterisk-prefix": 2,
        "jsdoc/require-jsdoc": [
          2,
          {
            "publicOnly": true,
            "checkConstructors": false,
            "checkGetters": true,
            "checkSetters": true,
            "require": {
              "ClassDeclaration": true,
              "MethodDefinition": false
            },
            "contexts": [
              "ClassProperty:not([accessibility=\"private\"])",
              "MethodDefinition:not([accessibility=\"private\"]) > FunctionExpression"
            ]
          }
        ]
      }
    },
    {
      "files": ["*.component.ts"],
      "parserOptions": {
        "project": [
          "projects/stream-chat-angular/tsconfig.lib.json",
          "projects/stream-chat-angular/tsconfig.spec.json"
        ],
        "createDefaultProgram": true
      },
      "extends": ["plugin:jsdoc/recommended"],
      "settings": {
        "jsdoc": {
          "mode": "typescript"
        }
      },
      "plugins": ["sort-class-members"],
      "rules": {
        "jsdoc/require-param-type": 0,
        "jsdoc/require-returns-type": 0,
        "jsdoc/newline-after-description": 0,
        "jsdoc/require-param-description": 0,
        "jsdoc/require-param": 2,
        "jsdoc/no-types": 2,
        "jsdoc/no-defaults": 2,
        "jsdoc/require-asterisk-prefix": 2,
        "jsdoc/require-jsdoc": [
          2,
          {
            "publicOnly": true,
            "checkConstructors": false,
            "checkGetters": true,
            "checkSetters": true,
            "require": {
              "ClassDeclaration": true,
              "MethodDefinition": false
            },
            "contexts": [
              "ClassProperty > Decorator[expression.callee.name=\"Input\"]",
              "ClassProperty > Decorator[expression.callee.name=\"Output\"]"
            ]
          }
        ],
        "sort-class-members/sort-class-members": [
          2,
          {
            "order": ["[inputs]", "[outputs]"],
            "groups": {
              "inputs": [{ "groupByDecorator": "Input" }],
              "outputs": [{ "groupByDecorator": "Output" }]
            }
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "rules": {
        "@angular-eslint/template/conditional-complexity": "off"
      }
    }
  ]
}
